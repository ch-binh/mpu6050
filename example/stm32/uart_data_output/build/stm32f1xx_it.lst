ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "src/stm32f1xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
   1:src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:src/stm32f1xx_it.c **** /**
   3:src/stm32f1xx_it.c ****   ******************************************************************************
   4:src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:src/stm32f1xx_it.c ****   ******************************************************************************
   7:src/stm32f1xx_it.c ****   * @attention
   8:src/stm32f1xx_it.c ****   *
   9:src/stm32f1xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:src/stm32f1xx_it.c ****   * All rights reserved.
  11:src/stm32f1xx_it.c ****   *
  12:src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:src/stm32f1xx_it.c ****   *
  16:src/stm32f1xx_it.c ****   ******************************************************************************
  17:src/stm32f1xx_it.c ****   */
  18:src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:src/stm32f1xx_it.c **** 
  20:src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:src/stm32f1xx_it.c **** #include "main.h"
  22:src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:src/stm32f1xx_it.c **** /* USER CODE END Includes */
  26:src/stm32f1xx_it.c **** 
  27:src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:src/stm32f1xx_it.c **** 
  30:src/stm32f1xx_it.c **** /* USER CODE END TD */
  31:src/stm32f1xx_it.c **** 
  32:src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 2


  33:src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:src/stm32f1xx_it.c **** 
  35:src/stm32f1xx_it.c **** /* USER CODE END PD */
  36:src/stm32f1xx_it.c **** 
  37:src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:src/stm32f1xx_it.c **** 
  40:src/stm32f1xx_it.c **** /* USER CODE END PM */
  41:src/stm32f1xx_it.c **** 
  42:src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:src/stm32f1xx_it.c **** 
  45:src/stm32f1xx_it.c **** /* USER CODE END PV */
  46:src/stm32f1xx_it.c **** 
  47:src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:src/stm32f1xx_it.c **** 
  50:src/stm32f1xx_it.c **** /* USER CODE END PFP */
  51:src/stm32f1xx_it.c **** 
  52:src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:src/stm32f1xx_it.c **** 
  55:src/stm32f1xx_it.c **** /* USER CODE END 0 */
  56:src/stm32f1xx_it.c **** 
  57:src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:src/stm32f1xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  59:src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  60:src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  61:src/stm32f1xx_it.c **** 
  62:src/stm32f1xx_it.c **** /* USER CODE END EV */
  63:src/stm32f1xx_it.c **** 
  64:src/stm32f1xx_it.c **** /******************************************************************************/
  65:src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  66:src/stm32f1xx_it.c **** /******************************************************************************/
  67:src/stm32f1xx_it.c **** /**
  68:src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:src/stm32f1xx_it.c ****   */
  70:src/stm32f1xx_it.c **** void NMI_Handler(void)
  71:src/stm32f1xx_it.c **** {
  27              		.loc 1 71 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  72:src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:src/stm32f1xx_it.c **** 
  74:src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:src/stm32f1xx_it.c ****    while (1)
  34              		.loc 1 76 4 view .LVU1
  77:src/stm32f1xx_it.c ****   {
  78:src/stm32f1xx_it.c ****   }
  35              		.loc 1 78 3 view .LVU2
  76:src/stm32f1xx_it.c ****   {
  36              		.loc 1 76 10 view .LVU3
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 3


  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE65:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB66:
  79:src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:src/stm32f1xx_it.c **** }
  81:src/stm32f1xx_it.c **** 
  82:src/stm32f1xx_it.c **** /**
  83:src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:src/stm32f1xx_it.c ****   */
  85:src/stm32f1xx_it.c **** void HardFault_Handler(void)
  86:src/stm32f1xx_it.c **** {
  50              		.loc 1 86 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  87:src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:src/stm32f1xx_it.c **** 
  89:src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:src/stm32f1xx_it.c ****   while (1)
  57              		.loc 1 90 3 view .LVU5
  91:src/stm32f1xx_it.c ****   {
  92:src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:src/stm32f1xx_it.c ****   }
  58              		.loc 1 94 3 view .LVU6
  90:src/stm32f1xx_it.c ****   {
  59              		.loc 1 90 9 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE66:
  64              		.section	.text.MemManage_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	MemManage_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MemManage_Handler:
  72              	.LFB67:
  95:src/stm32f1xx_it.c **** }
  96:src/stm32f1xx_it.c **** 
  97:src/stm32f1xx_it.c **** /**
  98:src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  99:src/stm32f1xx_it.c ****   */
 100:src/stm32f1xx_it.c **** void MemManage_Handler(void)
 101:src/stm32f1xx_it.c **** {
  73              		.loc 1 101 1 view -0
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 4


  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
 102:src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:src/stm32f1xx_it.c **** 
 104:src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:src/stm32f1xx_it.c ****   while (1)
  80              		.loc 1 105 3 view .LVU9
 106:src/stm32f1xx_it.c ****   {
 107:src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:src/stm32f1xx_it.c ****   }
  81              		.loc 1 109 3 view .LVU10
 105:src/stm32f1xx_it.c ****   {
  82              		.loc 1 105 9 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE67:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB68:
 110:src/stm32f1xx_it.c **** }
 111:src/stm32f1xx_it.c **** 
 112:src/stm32f1xx_it.c **** /**
 113:src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 114:src/stm32f1xx_it.c ****   */
 115:src/stm32f1xx_it.c **** void BusFault_Handler(void)
 116:src/stm32f1xx_it.c **** {
  96              		.loc 1 116 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 117:src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:src/stm32f1xx_it.c **** 
 119:src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:src/stm32f1xx_it.c ****   while (1)
 103              		.loc 1 120 3 view .LVU13
 121:src/stm32f1xx_it.c ****   {
 122:src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:src/stm32f1xx_it.c ****   }
 104              		.loc 1 124 3 view .LVU14
 120:src/stm32f1xx_it.c ****   {
 105              		.loc 1 120 9 view .LVU15
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 5


 108              	.LFE68:
 110              		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	UsageFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	UsageFault_Handler:
 118              	.LFB69:
 125:src/stm32f1xx_it.c **** }
 126:src/stm32f1xx_it.c **** 
 127:src/stm32f1xx_it.c **** /**
 128:src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:src/stm32f1xx_it.c ****   */
 130:src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 131:src/stm32f1xx_it.c **** {
 119              		.loc 1 131 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
 132:src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:src/stm32f1xx_it.c **** 
 134:src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 135 3 view .LVU17
 136:src/stm32f1xx_it.c ****   {
 137:src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:src/stm32f1xx_it.c ****   }
 127              		.loc 1 139 3 view .LVU18
 135:src/stm32f1xx_it.c ****   {
 128              		.loc 1 135 9 view .LVU19
 129 0000 FEE7     		b	.L10
 130              		.cfi_endproc
 131              	.LFE69:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SVC_Handler:
 141              	.LFB70:
 140:src/stm32f1xx_it.c **** }
 141:src/stm32f1xx_it.c **** 
 142:src/stm32f1xx_it.c **** /**
 143:src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:src/stm32f1xx_it.c ****   */
 145:src/stm32f1xx_it.c **** void SVC_Handler(void)
 146:src/stm32f1xx_it.c **** {
 142              		.loc 1 146 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 6


 146              		@ link register save eliminated.
 147:src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:src/stm32f1xx_it.c **** 
 149:src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:src/stm32f1xx_it.c **** 
 152:src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:src/stm32f1xx_it.c **** }
 147              		.loc 1 153 1 view .LVU21
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE70:
 152              		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	DebugMon_Handler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	DebugMon_Handler:
 160              	.LFB71:
 154:src/stm32f1xx_it.c **** 
 155:src/stm32f1xx_it.c **** /**
 156:src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 157:src/stm32f1xx_it.c ****   */
 158:src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 159:src/stm32f1xx_it.c **** {
 161              		.loc 1 159 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 160:src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:src/stm32f1xx_it.c **** 
 162:src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:src/stm32f1xx_it.c **** 
 165:src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:src/stm32f1xx_it.c **** }
 166              		.loc 1 166 1 view .LVU23
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE71:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	PendSV_Handler:
 179              	.LFB72:
 167:src/stm32f1xx_it.c **** 
 168:src/stm32f1xx_it.c **** /**
 169:src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:src/stm32f1xx_it.c ****   */
 171:src/stm32f1xx_it.c **** void PendSV_Handler(void)
 172:src/stm32f1xx_it.c **** {
 180              		.loc 1 172 1 view -0
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 7


 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 173:src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:src/stm32f1xx_it.c **** 
 175:src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:src/stm32f1xx_it.c **** 
 178:src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:src/stm32f1xx_it.c **** }
 185              		.loc 1 179 1 view .LVU25
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE72:
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	SysTick_Handler:
 198              	.LFB73:
 180:src/stm32f1xx_it.c **** 
 181:src/stm32f1xx_it.c **** /**
 182:src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 183:src/stm32f1xx_it.c ****   */
 184:src/stm32f1xx_it.c **** void SysTick_Handler(void)
 185:src/stm32f1xx_it.c **** {
 199              		.loc 1 185 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI0:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 186:src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:src/stm32f1xx_it.c **** 
 188:src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:src/stm32f1xx_it.c ****   HAL_IncTick();
 208              		.loc 1 189 3 view .LVU27
 209 0002 FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL0:
 190:src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:src/stm32f1xx_it.c **** 
 192:src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:src/stm32f1xx_it.c **** }
 211              		.loc 1 193 1 is_stmt 0 view .LVU28
 212 0006 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE73:
 216              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 217              		.align	1
 218              		.global	I2C1_EV_IRQHandler
 219              		.syntax unified
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 8


 220              		.thumb
 221              		.thumb_func
 223              	I2C1_EV_IRQHandler:
 224              	.LFB74:
 194:src/stm32f1xx_it.c **** 
 195:src/stm32f1xx_it.c **** /******************************************************************************/
 196:src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 197:src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 200:src/stm32f1xx_it.c **** /******************************************************************************/
 201:src/stm32f1xx_it.c **** 
 202:src/stm32f1xx_it.c **** /**
 203:src/stm32f1xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 204:src/stm32f1xx_it.c ****   */
 205:src/stm32f1xx_it.c **** void I2C1_EV_IRQHandler(void)
 206:src/stm32f1xx_it.c **** {
 225              		.loc 1 206 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI1:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 207:src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 208:src/stm32f1xx_it.c **** 
 209:src/stm32f1xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 210:src/stm32f1xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 234              		.loc 1 210 3 view .LVU30
 235 0002 0248     		ldr	r0, .L18
 236 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 237              	.LVL1:
 211:src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 212:src/stm32f1xx_it.c **** 
 213:src/stm32f1xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 214:src/stm32f1xx_it.c **** }
 238              		.loc 1 214 1 is_stmt 0 view .LVU31
 239 0008 08BD     		pop	{r3, pc}
 240              	.L19:
 241 000a 00BF     		.align	2
 242              	.L18:
 243 000c 00000000 		.word	hi2c1
 244              		.cfi_endproc
 245              	.LFE74:
 247              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.global	I2C1_ER_IRQHandler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	I2C1_ER_IRQHandler:
 255              	.LFB75:
 215:src/stm32f1xx_it.c **** 
 216:src/stm32f1xx_it.c **** /**
 217:src/stm32f1xx_it.c ****   * @brief This function handles I2C1 error interrupt.
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 9


 218:src/stm32f1xx_it.c ****   */
 219:src/stm32f1xx_it.c **** void I2C1_ER_IRQHandler(void)
 220:src/stm32f1xx_it.c **** {
 256              		.loc 1 220 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI2:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 221:src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 0 */
 222:src/stm32f1xx_it.c **** 
 223:src/stm32f1xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 0 */
 224:src/stm32f1xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c1);
 265              		.loc 1 224 3 view .LVU33
 266 0002 0248     		ldr	r0, .L22
 267 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 268              	.LVL2:
 225:src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 1 */
 226:src/stm32f1xx_it.c **** 
 227:src/stm32f1xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 1 */
 228:src/stm32f1xx_it.c **** }
 269              		.loc 1 228 1 is_stmt 0 view .LVU34
 270 0008 08BD     		pop	{r3, pc}
 271              	.L23:
 272 000a 00BF     		.align	2
 273              	.L22:
 274 000c 00000000 		.word	hi2c1
 275              		.cfi_endproc
 276              	.LFE75:
 278              		.section	.text.USART1_IRQHandler,"ax",%progbits
 279              		.align	1
 280              		.global	USART1_IRQHandler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	USART1_IRQHandler:
 286              	.LFB76:
 229:src/stm32f1xx_it.c **** 
 230:src/stm32f1xx_it.c **** /**
 231:src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 232:src/stm32f1xx_it.c ****   */
 233:src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 234:src/stm32f1xx_it.c **** {
 287              		.loc 1 234 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 08B5     		push	{r3, lr}
 292              	.LCFI3:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
 235:src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 236:src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 10


 237:src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 238:src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 296              		.loc 1 238 3 view .LVU36
 297 0002 0248     		ldr	r0, .L26
 298 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 299              	.LVL3:
 239:src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 240:src/stm32f1xx_it.c **** 
 241:src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 242:src/stm32f1xx_it.c **** }
 300              		.loc 1 242 1 is_stmt 0 view .LVU37
 301 0008 08BD     		pop	{r3, pc}
 302              	.L27:
 303 000a 00BF     		.align	2
 304              	.L26:
 305 000c 00000000 		.word	huart1
 306              		.cfi_endproc
 307              	.LFE76:
 309              		.text
 310              	.Letext0:
 311              		.file 2 "C:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 312              		.file 3 "C:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 313              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/include/stm32f103xb.h"
 314              		.file 5 "Drivers/STM32F1xx_HAL_Driver/inc/stm32f1xx_hal_def.h"
 315              		.file 6 "Drivers/STM32F1xx_HAL_Driver/inc/stm32f1xx_hal_dma.h"
 316              		.file 7 "Drivers/STM32F1xx_HAL_Driver/inc/stm32f1xx_hal_i2c.h"
 317              		.file 8 "Drivers/STM32F1xx_HAL_Driver/inc/stm32f1xx_hal_uart.h"
 318              		.file 9 "Drivers/STM32F1xx_HAL_Driver/inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:19     .text.NMI_Handler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:42     .text.HardFault_Handler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:65     .text.MemManage_Handler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:88     .text.BusFault_Handler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:94     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:111    .text.UsageFault_Handler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:117    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:134    .text.SVC_Handler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:140    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:153    .text.DebugMon_Handler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:159    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:172    .text.PendSV_Handler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:178    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:191    .text.SysTick_Handler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:197    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:217    .text.I2C1_EV_IRQHandler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:223    .text.I2C1_EV_IRQHandler:00000000 I2C1_EV_IRQHandler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:243    .text.I2C1_EV_IRQHandler:0000000c $d
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:248    .text.I2C1_ER_IRQHandler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:254    .text.I2C1_ER_IRQHandler:00000000 I2C1_ER_IRQHandler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:274    .text.I2C1_ER_IRQHandler:0000000c $d
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:279    .text.USART1_IRQHandler:00000000 $t
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:285    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\binhp\AppData\Local\Temp\ccmWkrna.s:305    .text.USART1_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_I2C_EV_IRQHandler
hi2c1
HAL_I2C_ER_IRQHandler
HAL_UART_IRQHandler
huart1
